import pygame
import random
import math
from pygame import mixer

#intialize the pygame
pygame.init()

#create the sceen
screen = pygame.display.set_mode((1200, 650))

#background
background = pygame.image.load('background.jpg')

#background sound
mixer.music.load('background.wav')
mixer.music.play(-1)

#title & icon
pygame.display.set_caption("Space Invader")
icon = pygame.image.load('ufo.png')
pygame.display.set_icon(icon)

#player
playerIMG = pygame.image.load('player.png')
playerX = 600
playerY = 600
playerX_change = 0

#enemy
enemyIMG = []
enemyX = []
enemyY = []
enemyX_change =[]
enemyY_change =[]
num_of_enemies = 6

for i in range(num_of_enemies):
    enemyIMG.append(pygame.image.load('enemy.png'))
    enemyX.append(random.randint(0,800))
    enemyY.append(random.randint(50,150))
    enemyX_change.append(.4)
    enemyY_change.append(40)

#bullet
#fire - is moving with player
#
bulletIMG = pygame.image.load('bullet.png')
bulletX = 0
bulletY = 600
bulletX_change = 0
bulletY_change = 2
bullet_state = "ready"

#score
score_value = 0
font = pygame.font.Font('freesansbold.ttf', 64)

textX = 10
textY = 10

def show_score(x,y):
    score = font.render("Score :" + str(score_value), True, (255,255,255))
    screen.blit(score, (x,y))
def player(x,y):
    screen.blit(playerIMG,(x, y))

def enemy(x,y, i):
    screen.blit(enemyIMG[i],(x, y))

def fire_bullet(x,y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletIMG,(x + 16,y + 10))

def isCollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt((math.pow(enemyX - bulletX, 2)) + (math.pow(enemyY - bulletY,2)))
    if distance < 27:
        return True
    else:
        return False

#game loop
running = True
while running:

    #RBG - Color
    screen.fill((255,0,0))
    #make background appear
    screen.blit(background,(0,0))
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        #keystroke
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playerX_change = -5
            if event.key == pygame.K_RIGHT:
                playerX_change = 5
            if event.key == pygame.K_SPACE:
                if bullet_state is "ready":
                    bullet_Sound = mixer.Sound('laser.wav')
                    bullet_Sound.play()
                    #get current position of X cordinates of spaceship
                    bulletX = playerX
                    fire_bullet(bulletX, bulletY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_change = 0


#checking boundries so dnt go out of bounds
    playerX += playerX_change

    if playerX <= 0:
        playerX = 0
    elif playerX >= 1168:
        playerX = 1168

#enemy movement
    for i in range(num_of_enemies):
        enemyX[i] += enemyX_change[i]
        if enemyX[i] <= 0:
            enemyX_change[i] = .4
            enemyY[i] += enemyY_change[i]
        elif enemyX[i] >= 1168:
            enemyX_change[i] = -.4
            enemyY[i] += enemyY_change[i]

        # collision
        collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)
        if collision:
            explosion_Sound = mixer.Sound('explosion.wav')
            explosion_Sound.play()
            bulletY = 600
            bullet_state = "ready"
            score_value += 1
            enemyX[i] = random.randint(0, 800)
            enemyY[i] = random.randint(50, 150)

        enemy(enemyX[i], enemyY[i], i)
    #bullet movement
    if bulletY <0:
        bulletY = 600
        bullet_state = "ready"

    if bullet_state is "fire":
        fire_bullet(bulletX, bulletY) #w/out this statement bullet will not appear on screen
        bulletY -= bulletY_change

    player(playerX, playerY)
    show_score(textX, textY)
    pygame.display.update()
